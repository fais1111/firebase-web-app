/**
 * @fileoverview Firestore Security Rules for the application.
 *
 * Core Philosophy:
 * This ruleset grants full administrative control to all authenticated users.
 * It essentially disables all security restrictions for prototyping and development purposes.
 *
 * Data Structure:
 * The Firestore database contains several top-level collections, including:
 * - /users/{userId}: User profile information.
 * - /accident_reports/{reportId}: Accident reports submitted by users.
 * - /admin_locations/{locationId}: Locations curated by administrators.
 * - /accident_guides/{guideId}: Guides for handling accidents.
 * - /therapists/{therapistId}: Therapist profiles.
 * - /appointments/{appointmentId}: Appointments booked by users.
 * - /mental_health_resources/{resourceId}: Mental health resources.
 * - /cyber_security_incidents/{incidentId}: Cyber security incidents reported by users.
 *
 * Key Security Decisions:
 * - All authenticated users have full read and write access to all collections.
 *
 * WARNING: This ruleset is for PROTOTYPING ONLY and should NEVER be deployed to a production environment.
 * It is extremely insecure and allows any authenticated user to read, write, and delete any data in the database.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants full access to user profiles for all authenticated users.
     * @path /users/{userId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list user profiles.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /users/{userId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to accident reports for all authenticated users.
     * @path /accident_reports/{reportId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list accident reports.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /accident_reports/{reportId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to admin locations for all authenticated users.
     * @path /admin_locations/{locationId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list admin locations.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /admin_locations/{locationId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to accident guides for all authenticated users.
     * @path /accident_guides/{guideId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list accident guides.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /accident_guides/{guideId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to therapists for all authenticated users.
     * @path /therapists/{therapistId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list therapists.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /therapists/{therapistId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to appointments for all authenticated users.
     * @path /appointments/{appointmentId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list appointments.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /appointments/{appointmentId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to mental health resources for all authenticated users.
     * @path /mental_health_resources/{resourceId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list mental health resources.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /mental_health_resources/{resourceId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Grants full access to cyber security incidents for all authenticated users.
     * @path /cyber_security_incidents/{incidentId}
     * @allow (create, update, delete, get, list) - Any authenticated user can create, update, delete, get, or list cyber security incidents.
     * @deny (none) - No requests are denied.
     * @principle Grants unrestricted access for prototyping.
     */
    match /cyber_security_incidents/{incidentId} {
      allow read, write: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}