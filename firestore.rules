/**
 * @file Firestore Security Rules
 * @description This ruleset allows full read and write access to all data.
 *   It should only be used in a prototyping environment where security is not a primary concern.
 *
 * @dataStructure
 *   /users/{userId}: Stores user profiles.
 *   /accident_reports/{reportId}: Stores accident reports from all users.
 *   /admin_locations/{locationId}: Stores accident hotspots curated by administrators.
 *   /accident_guides/{guideId}: Stores accident management guides.
 *   /therapists/{therapistId}: Stores information about registered therapists.
 *   /appointments/{appointmentId}: Stores appointments booked by users.
 *   /mental_health_resources/{resourceId}: Stores mental health resources.
 *   /cyber_security_incidents/{incidentId}: Stores cyber security incident reports.
 *   /disaster_reports/{reportId}: Stores user-submitted disaster reports.
 *   /sos_reports/{reportId}: Stores emergency SOS alerts from users.
 *   /safe_zones/{zoneId}: Stores admin-designated safe zones.
 *
 * @keySecurityDecisions
 *   All read and write access is allowed.
 *
 * @denormalizationForAuthorization
 *   Not applicable, as all access is allowed.
 *
 * @structuralSegregation
 *   Not applicable, as all access is allowed.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows full read and write access to user profiles.
     * @path /users/{userId}
     * @allow (create) Any authenticated user can create a profile.
     * @allow (read) Any user can read a profile.
     * @allow (update) Any user can update a profile.
     * @allow (delete) Any user can delete a profile.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on user profiles.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to accident reports.
     * @path /accident_reports/{reportId}
     * @allow (create) Any authenticated user can create an accident report.
     * @allow (read) Any user can read an accident report.
     * @allow (update) Any user can update an accident report.
     * @allow (delete) Any user can delete an accident report.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on accident reports.
     */
    match /accident_reports/{reportId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to admin locations.
     * @path /admin_locations/{locationId}
     * @allow (create) Any authenticated user can create an admin location.
     * @allow (read) Any user can read an admin location.
     * @allow (update) Any user can update an admin location.
     * @allow (delete) Any user can delete an admin location.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on admin locations.
     */
    match /admin_locations/{locationId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to accident guides.
     * @path /accident_guides/{guideId}
     * @allow (create) Any authenticated user can create an accident guide.
     * @allow (read) Any user can read an accident guide.
     * @allow (update) Any user can update an accident guide.
     * @allow (delete) Any user can delete an accident guide.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on accident guides.
     */
    match /accident_guides/{guideId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to therapists.
     * @path /therapists/{therapistId}
     * @allow (create) Any authenticated user can create a therapist profile.
     * @allow (read) Any user can read a therapist profile.
     * @allow (update) Any user can update a therapist profile.
     * @allow (delete) Any user can delete a therapist profile.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on therapists.
     */
    match /therapists/{therapistId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to appointments.
     * @path /appointments/{appointmentId}
     * @allow (create) Any authenticated user can create an appointment.
     * @allow (read) Any user can read an appointment.
     * @allow (update) Any user can update an appointment.
     * @allow (delete) Any user can delete an appointment.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on appointments.
     */
    match /appointments/{appointmentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to mental health resources.
     * @path /mental_health_resources/{resourceId}
     * @allow (create) Any authenticated user can create a mental health resource.
     * @allow (read) Any user can read a mental health resource.
     * @allow (update) Any user can update a mental health resource.
     * @allow (delete) Any user can delete a mental health resource.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on mental health resources.
     */
    match /mental_health_resources/{resourceId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to cyber security incidents.
     * @path /cyber_security_incidents/{incidentId}
     * @allow (create) Any authenticated user can create a cyber security incident.
     * @allow (read) Any user can read a cyber security incident.
     * @allow (update) Any user can update a cyber security incident.
     * @allow (delete) Any user can delete a cyber security incident.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on cyber security incidents.
     */
    match /cyber_security_incidents/{incidentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to disaster reports.
     * @path /disaster_reports/{reportId}
     * @allow (create) Any authenticated user can create a disaster report.
     * @allow (read) Any user can read a disaster report.
     * @allow (update) Any user can update a disaster report.
     * @allow (delete) Any user can delete a disaster report.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on disaster reports.
     */
    match /disaster_reports/{reportId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to SOS reports.
     * @path /sos_reports/{reportId}
     * @allow (create) Any authenticated user can create an SOS report.
     * @allow (read) Any user can read an SOS report.
     * @allow (update) Any user can update an SOS report.
     * @allow (delete) Any user can delete an SOS report.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on SOS reports.
     */
    match /sos_reports/{reportId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows full read and write access to safe zones.
     * @path /safe_zones/{zoneId}
     * @allow (create) Any authenticated user can create a safe zone.
     * @allow (read) Any user can read a safe zone.
     * @allow (update) Any user can update a safe zone.
     * @allow (delete) Any user can delete a safe zone.
     * @deny (none) No requests are denied.
     * @principle Allows any operation on safe zones.
     */
    match /safe_zones/{zoneId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}