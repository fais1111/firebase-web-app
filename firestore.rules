/**
 * @file Firestore Security Rules
 * @description This ruleset allows all read and write operations for all users.
 * @dataStructure The database consists of several top-level collections: users, accident_reports, admin_locations, accident_guides, therapists, appointments, mental_health_resources, cyber_security_incidents, disaster_reports, sos_reports, safe_zones, and resources.
 * @keySecurityDecisions All collections are publicly readable and writable.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows all read and write operations on user profiles.
     * @path /users/{userId}
     * @allow (create) Any authenticated user can create a profile.
     * @allow (get) Any user can read a user profile.
     * @allow (update) Any user can update a user profile.
     * @allow (delete) Any user can delete a user profile.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on accident reports.
     * @path /accident_reports/{reportId}
     * @allow (create) Any authenticated user can create an accident report.
     * @allow (get) Any user can read an accident report.
     * @allow (update) Any user can update an accident report.
     * @allow (delete) Any user can delete an accident report.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /accident_reports/{reportId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on admin locations.
     * @path /admin_locations/{locationId}
     * @allow (create) Any authenticated user can create an admin location.
     * @allow (get) Any user can read an admin location.
     * @allow (update) Any user can update an admin location.
     * @allow (delete) Any user can delete an admin location.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /admin_locations/{locationId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on accident guides.
     * @path /accident_guides/{guideId}
     * @allow (create) Any authenticated user can create an accident guide.
     * @allow (get) Any user can read an accident guide.
     * @allow (update) Any user can update an accident guide.
     * @allow (delete) Any user can delete an accident guide.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /accident_guides/{guideId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on therapists.
     * @path /therapists/{therapistId}
     * @allow (create) Any authenticated user can create a therapist profile.
     * @allow (get) Any user can read a therapist profile.
     * @allow (update) Any user can update a therapist profile.
     * @allow (delete) Any user can delete a therapist profile.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /therapists/{therapistId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on appointments.
     * @path /appointments/{appointmentId}
     * @allow (create) Any authenticated user can create an appointment.
     * @allow (get) Any user can read an appointment.
     * @allow (update) Any user can update an appointment.
     * @allow (delete) Any user can delete an appointment.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /appointments/{appointmentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on mental health resources.
     * @path /mental_health_resources/{resourceId}
     * @allow (create) Any authenticated user can create a mental health resource.
     * @allow (get) Any user can read a mental health resource.
     * @allow (update) Any user can update a mental health resource.
     * @allow (delete) Any user can delete a mental health resource.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /mental_health_resources/{resourceId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on cyber security incidents.
     * @path /cyber_security_incidents/{incidentId}
     * @allow (create) Any authenticated user can create a cyber security incident report.
     * @allow (get) Any user can read a cyber security incident report.
     * @allow (update) Any user can update a cyber security incident report.
     * @allow (delete) Any user can delete a cyber security incident report.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /cyber_security_incidents/{incidentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on disaster reports.
     * @path /disaster_reports/{reportId}
     * @allow (create) Any authenticated user can create a disaster report.
     * @allow (get) Any user can read a disaster report.
     * @allow (update) Any user can update a disaster report.
     * @allow (delete) Any user can delete a disaster report.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /disaster_reports/{reportId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on SOS reports.
     * @path /sos_reports/{reportId}
     * @allow (create) Any authenticated user can create an SOS report.
     * @allow (get) Any user can read an SOS report.
     * @allow (update) Any user can update an SOS report.
     * @allow (delete) Any user can delete an SOS report.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /sos_reports/{reportId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on safe zones.
     * @path /safe_zones/{zoneId}
     * @allow (create) Any authenticated user can create a safe zone.
     * @allow (get) Any user can read a safe zone.
     * @allow (update) Any user can update a safe zone.
     * @allow (delete) Any user can delete a safe zone.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /safe_zones/{zoneId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows all read and write operations on resources.
     * @path /resources/{resourceId}
     * @allow (create) Any authenticated user can create a resource.
     * @allow (get) Any user can read a resource.
     * @allow (update) Any user can update a resource.
     * @allow (delete) Any user can delete a resource.
     * @deny (none) There are no restrictions.
     * @principle Allows all access.
     */
    match /resources/{resourceId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}