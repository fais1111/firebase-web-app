/**
 * @file Overview
 * This ruleset grants open access to all data, effectively disabling all security measures.
 *
 * Core Philosophy:
 * The ruleset provides unrestricted read and write access to all collections and documents
 * within the Firestore database. This is equivalent to running without any security rules.
 *
 * Data Structure:
 * The database contains several top-level collections: `users`, `accident_reports`,
 * `admin_locations`, `accident_guides`, `therapists`, `appointments`, and `mental_health_resources`.
 *
 * Key Security Decisions:
 * - Unrestricted Access: All users, authenticated or not, can read, create, update,
 *   and delete any data.
 * - No Authentication Required: The rules do not validate user authentication.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants open read and write access to user profiles.
     * @path /users/{userId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete user profiles.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /users/{userId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Grants open read and write access to accident reports.
     * @path /accident_reports/{reportId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete accident reports.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /accident_reports/{reportId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Grants open read and write access to admin locations.
     * @path /admin_locations/{locationId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete admin locations.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /admin_locations/{locationId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Grants open read and write access to accident guides.
     * @path /accident_guides/{guideId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete accident guides.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /accident_guides/{guideId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Grants open read and write access to therapists.
     * @path /therapists/{therapistId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete therapist profiles.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /therapists/{therapistId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Grants open read and write access to appointments.
     * @path /appointments/{appointmentId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete appointments.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /appointments/{appointmentId} {
      allow get, list, create, update, delete: if true;
    }

    /**
     * @description Grants open read and write access to mental health resources.
     * @path /mental_health_resources/{resourceId}
     * @allow (get, list, create, update, delete) Any user can read, create, update, or delete mental health resources.
     * @deny None. All requests are allowed.
     * @principle No security restrictions enforced.
     */
    match /mental_health_resources/{resourceId} {
      allow get, list, create, update, delete: if true;
    }
  }
}